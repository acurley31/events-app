{"version":3,"sources":["utils/api/settings.js","utils/api/events.js","utils/api/eventSummaries.js","actions/events.js","utils/helpers.js","reducers/events.js","reducers/index.js","middleware/logger.js","middleware/index.js","store/index.js","actions/shared.js","components/Nav.js","components/EventListHeader.js","components/EventTable.js","components/EventList.js","components/EventForm.js","components/NewEvent.js","components/EventDetail.js","components/App.js","index.js"],"names":["API_BASE_URL","API","axios","create","baseURL","timeout","headers","xsrfCookieName","xsrfHeaderName","detailURL","id","EventsAPI","getEvents","api","get","addEvent","data","post","updateEvent","patch","deleteEvent","delete","EventSummariesAPI","addEventSummary","upsertEvent","type","mapArrayToObject","array","reduce","obj","item","removeKeyFromObject","inputObj","removeKey","Object","keys","key","toString","events","state","action","combineReducers","logger","store","next","console","groupCollapsed","log","result","getState","groupEnd","applyMiddleware","thunk","preloadedState","createStore","reducer","middleware","handleGetInitialData","dispatch","then","res","catch","error","useStyles","makeStyles","theme","navLink","marginLeft","color","palette","primary","contrastText","Nav","props","classes","AppBar","position","variant","Toolbar","Typography","Button","component","NavLink","to","className","root","display","alignItems","title","marginRight","actionButton","spacing","EventListHeader","size","onClick","e","preventDefault","a","document","createElement","href","summary_file","download","style","body","appendChild","click","removeChild","startIcon","Link","disableElevation","marginTop","table","minWidth","connect","map","length","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","hover","year","event_type","description","field1","field2","field3","IconButton","fontSize","padding","items","EventForm","onSubmit","onDelete","prevProps","this","setState","autoComplete","TextField","fullWidth","value","onChange","target","label","required","textField","multiline","rows","actions","disabled","Component","withStyles","justifyContent","withTheme","withRouter","handleAddEvent","history","push","match","params","handleUpdateEvent","handleDeleteEvent","App","exact","path","EventList","NewEvent","EventDetail","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8bb6342b.chunk.js","sourcesContent":["import axios from 'axios';\n\n// Backend API settings\nconst PROTOCAL = 'http'\nconst SERVER = '127.0.0.1'\nconst PORT = '8000'\nconst API_BASE_URL = `${PROTOCAL}://${SERVER}:${PORT}/api`\n\n\n// Configure the default axios instance\nconst API = axios.create({\n    baseURL: API_BASE_URL,\n    timeout: 1000,\n    headers: { 'content-type': 'application/json' },\n    xsrfCookieName: 'csrftoken',\n    xsrfHeaderName: 'X-CSRFToken',\n})\n\n\n// Export the default\nexport default API\n","import api from './settings';\n\n\n// API endpoints\nconst baseURL = '/events/'\nconst detailURL = (id) => `${baseURL}${id}/`\n\n\n// Define the HTTP requests\nconst getEvents = () => {\n    return api.get(baseURL)\n}\n\nconst addEvent = (data) => {\n    return api.post(baseURL, data)\n}\n\nconst updateEvent = (data) => {\n    return api.patch(detailURL(data.id), data)\n}\n\nconst deleteEvent = (id) => {\n    return api.delete(detailURL(id))\n}\n\n\n// Export the API\nconst EventsAPI = {\n    getEvents,\n    addEvent,\n    updateEvent,\n    deleteEvent,\n}\n\nexport default EventsAPI\n","import api from './settings';\n\n\n// API endpoints\nconst baseURL = '/events/summaries/'\n\n\n// Define the HTTP requests\nconst addEventSummary = () => {\n    return api.post(baseURL)\n}\n\n\n\n// Export the API\nconst EventSummariesAPI = {\n    addEventSummary,\n}\n\nexport default EventSummariesAPI\n","import { EventsAPI } from '../utils/api';\n\n// Action types\nexport const ADD_EVENTS = 'ADD_EVENTS'\nexport const UPSERT_EVENT = 'UPSERT_EVENT'\nexport const DELETE_EVENT = 'DELETE_EVENT'\n\n\n// Synchronous action creators\nconst addEvents = (data) => ({\n    type: ADD_EVENTS,\n    data,\n})\n\nconst upsertEvent = (data) => ({\n    type: UPSERT_EVENT,\n    data,\n})\n\nconst deleteEvent = (id) => ({\n    type: DELETE_EVENT,\n    id,\n})\n\n// Asynchronous action creators\nexport const handleGetEvents = () => {\n    return (dispatch) => {\n        return EventsAPI.getEvents()\n            .then(res => dispatch(addEvents(res.data)))\n            .catch(error => error)\n    }\n}\n\nexport const handleAddEvent = (data) => {\n    return (dispatch) => {\n        return EventsAPI.addEvent(data)\n            .then(res => dispatch(upsertEvent(res.data)))\n            .catch(error => error)\n    }\n}\n\nexport const handleUpdateEvent = (data) => {\n    return (dispatch) => {\n        return EventsAPI.updateEvent(data)\n            .then(res => dispatch(upsertEvent(res.data)))\n            .catch(error => error)\n    }\n}\n\nexport const handleDeleteEvent = (data) => {\n    return (dispatch) => {\n        dispatch(deleteEvent(data.id))\n        return EventsAPI.deleteEvent(data.id)\n            .catch(error => dispatch(upsertEvent(data)))\n    }\n}\n\n\n","// Check if an object is empty\nexport const isEmpty = (obj) => (\n    Object.keys(obj).length === 0 ? true : false\n)\n\n// Check if any objects are empty\nexport const anyEmpty = (array) => {\n    for(var i in array) {\n        if(isEmpty(array[i])) {\n            return true\n        }\n    }\n    return false\n}\n\n// Map an array to an object (immutable)\nexport const mapArrayToObject = (array) => {\n    return array.reduce((obj, item) => {\n        obj[item.id] = item\n        return obj\n    }, {})\n}\n\n\n// Map an object to an array (immutable)\nexport const mapObjectToArray = (obj) => {\n    return Object.keys(obj).map(key => obj[key])\n}\n\n\n// Remove a key from an object (immutable)\nexport const removeKeyFromObject = (inputObj, removeKey) => {\n    return Object.keys(inputObj).reduce((obj, key) => {\n        if (key !== removeKey.toString()) {\n            obj[key] = inputObj[key]\n        }\n        return obj\n    }, {})\n}\n","import { ADD_EVENTS, UPSERT_EVENT, DELETE_EVENT } from '../actions/events';\nimport { mapArrayToObject, removeKeyFromObject } from '../utils/helpers';\n\n\n// Events reducer\nconst events = (state={}, action) => {\n    switch (action.type) {\n        case ADD_EVENTS:\n            return mapArrayToObject(action.data)\n\n        case UPSERT_EVENT:\n            return {\n                ...state,\n                [action.data.id]: action.data\n            }\n\n        case DELETE_EVENT:\n            return removeKeyFromObject(state, action.id)\n\n        default:\n            return state\n    }\n\n}\nexport default events\n","import { combineReducers } from 'redux';\nimport events from './events';\n\n\n// Combine all reducers\nexport default combineReducers({\n    events,\n})\n","// Middleware to log all actions and the subsequent state to console\nconst logger = (store) => (next) => (action) => {\n    console.groupCollapsed(action.type)\n        console.log('The action: ', action)\n        const result = next(action)\n        console.log('The result: ', store.getState())\n    console.groupEnd()\n    return result\n}\n\nexport default logger;\n","import { applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from './logger';\n//import persistInLocalStorage from './persistInLocalStorage';\n\n\n// Export the applied middleware\nexport default applyMiddleware(\n    thunk,\n//    persistInLocalStorage,\n    logger,\n)\n","import { createStore } from 'redux';\nimport reducer from '../reducers';\nimport middleware from '../middleware';\n//import { STORAGE_KEY } from '../middleware/persistInLocalStorage';\n\n\n// Create and export the store (attempt to preload state from localStorage)\n//const storage = JSON.parse(localStorage.getItem(STORAGE_KEY))\nconst storage = null\nconst preloadedState = storage ? storage : {}\n\nexport default createStore(reducer, preloadedState, middleware)\n","import { handleGetEvents } from './events';\n\n\n// Asynchronous action creators\nexport const handleGetInitialData = () => {\n    return (dispatch) => {\n        dispatch(handleGetEvents())\n    }\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\nconst useStyles = makeStyles(theme => ({\n    navLink: {\n        marginLeft: 'auto',\n        color: theme.palette.primary.contrastText,\n    },\n}))\n\n\nconst Nav = (props) => {\n    const classes = useStyles()\n\n    return (\n        <AppBar position='sticky' variant='outlined'>\n            <Toolbar>\n                <Typography variant='h6'>Events Tracker</Typography>\n                <Button component={NavLink} to='/events' className={classes.navLink}>\n                    Events\n                </Button>\n            </Toolbar>\n        </AppBar>\n    )\n}\nexport default Nav\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport GetApp from '@material-ui/icons/GetApp';\nimport Add from '@material-ui/icons/Add';\nimport { EventSummariesAPI } from '../utils/api';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    title: {\n        marginRight: 'auto',\n    },\n    actionButton: {\n        marginLeft: theme.spacing(2),\n    },\n}))\n\n\nconst EventListHeader = (props) => {\n    const classes = useStyles()\n\n    const downloadSummary = (e) => {\n        e.preventDefault()\n        EventSummariesAPI.addEventSummary()\n            .then(res => {\n                const a = document.createElement('a')\n                a.href = res.data.summary_file\n                a.download = true\n                a.style.display = 'none'\n                \n                document.body.appendChild(a)\n                a.click()\n                document.body.removeChild(a)\n            })\n    }\n    \n    return (\n        <header className={classes.root}>\n            <Typography variant='h2' className={classes.title}>\n                Events List\n            </Typography>\n\n            <Button\n                variant='outlined'\n                size='small'\n                className={classes.actionButton}\n                onClick={downloadSummary}\n                startIcon={<GetApp/>}\n            >\n                Download Summary\n            </Button>\n\n            <Button\n                variant='contained'\n                size='small'\n                color='secondary'\n                className={classes.actionButton}\n                component={Link}\n                to='/events/new'\n                startIcon={<Add/>}\n                disableElevation\n            >\n                Add Event\n            </Button>\n        </header>\n    )\n}\nexport default EventListHeader;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Edit from '@material-ui/icons/Edit';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginTop: theme.spacing(4)\n    },\n    table: {\n        minWidth: 650,\n    }\n}))\n\n\nconst EventTable = (props) => {\n    const classes = useStyles()\n\n    if (props.events.length === 0) {\n        return (\n            <div className={classes.root}>\n                <Typography variant='h6'>\n                    No events found\n                </Typography>\n            </div>\n        )\n    }\n\n    return (\n        <TableContainer component={Paper} variant='outlined' className={classes.root}>\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Year</TableCell>\n                        <TableCell>Event Type</TableCell>\n                        <TableCell>Description</TableCell>\n                        <TableCell align='right'>Field 1</TableCell>\n                        <TableCell align='right'>Field 2</TableCell>\n                        <TableCell align='right'>Field 3</TableCell>\n                        <TableCell align='right'>Actions</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    { props.events.map(item => (\n                        <TableRow key={item.id} hover>\n                            <TableCell>{item.year}</TableCell>\n                            <TableCell>{item.event_type}</TableCell>\n                            <TableCell>{item.description}</TableCell>\n                            <TableCell align='right'>{item.field1}</TableCell>\n                            <TableCell align='right'>{item.field2}</TableCell>\n                            <TableCell align='right'>{item.field3}</TableCell>\n                            <TableCell align='right'>\n                                <IconButton component={Link} to={`/events/${item.id}`} size='small'>\n                                    <Edit fontSize='small'/>\n                                </IconButton>\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    )\n}\n\nconst mapStateToProps = ({ events }) => ({\n    events: Object.keys(events).map(id => events[id]),\n})\n\nexport default connect(mapStateToProps)(EventTable);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport EventListHeader from './EventListHeader';\nimport EventTable from './EventTable';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: theme.spacing(8),\n    },\n}))\n\nconst EventList = (props) => {\n    const classes = useStyles()\n    return (\n        <div className={classes.root}>\n            <EventListHeader />\n            <EventTable items={props.events}/>\n        </div>\n    )\n}\n\nconst mapStateToProps = ({ events }) => ({\n    events: Object.keys(events).map(id => events[id]),\n})\n\nexport default connect(mapStateToProps)(EventList)\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\n\nconst styles = (theme) => ({\n    textField: {\n        marginTop: theme.spacing(4),\n    },\n    actions: {\n        marginTop: theme.spacing(4),\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    actionButton: {\n        marginLeft: theme.spacing(2),\n    },\n})\n\n\nclass EventForm extends Component {\n\n    constructor(props) {\n        super(props)\n        if (props.data) {\n            this.state = {...props.data}\n        } else {\n            this.state = {\n                year: '',\n                event_type: '',\n                description: '',\n                field1: '',\n                field2: '',\n                field3: '',\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.data && prevProps.data !== this.props.data) {\n            this.setState({ ...this.props.data })\n        }\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault()\n        this.props.onSubmit(this.state)\n    }\n\n    onDelete = (e) => {\n        e.preventDefault()\n        const id = this.props.data ? this.props.data.id : null\n        if (id && this.props.onDelete) {\n            this.props.onDelete(this.props.data)\n        }\n    }\n\n    render() {\n        const { classes } = this.props\n\n        return (\n            <form onSubmit={this.onSubmit} autoComplete='off'>\n                <TextField\n                    variant='filled'\n                    fullWidth\n                    value={this.state.year}\n                    onChange={(e) => this.setState({year:e.target.value})}\n                    label='Year'\n                    required\n                    className={classes.textField}\n                />\n\n                <TextField\n                    variant='filled'\n                    fullWidth\n                    value={this.state.event_type}\n                    onChange={(e) => this.setState({event_type: e.target.value})}\n                    label='Event Type'\n                    required\n                    className={classes.textField}\n                />\n        \n                <TextField\n                    variant='filled'\n                    fullWidth\n                    multiline\n                    rows={4}\n                    value={this.state.description}\n                    onChange={(e) => this.setState({description: e.target.value})}\n                    label='Description'\n                    required\n                    className={classes.textField}\n                />\n\n                <TextField\n                    variant='filled'\n                    fullWidth\n                    value={this.state.field1}\n                    onChange={(e) => this.setState({field1: e.target.value})}\n                    label='Field 1'\n                    type='number'\n                    required\n                    className={classes.textField}\n                />\n\n                <TextField\n                    variant='filled'\n                    fullWidth\n                    value={this.state.field2}\n                    onChange={(e) => this.setState({field2: e.target.value})}\n                    label='Field 2'\n                    type='number'\n                    required\n                    className={classes.textField}\n                />\n\n                <TextField\n                    variant='filled'\n                    fullWidth\n                    value={this.state.field3}\n                    onChange={(e) => this.setState({field3: e.target.value})}\n                    label='Field 3'\n                    type='number'\n                    required\n                    className={classes.textField}\n                />\n\n                <div className={classes.actions}>\n                    <Button\n                        variant='outlined'\n                        color='secondary'\n                        onClick={this.onDelete}\n                        disableElevation\n                        className={classes.actionButton}\n                        disabled={!this.props.onDelete}\n                    >\n                        Delete\n                    </Button>\n\n                    <Button \n                        variant='contained'\n                        color='primary'\n                        type='submit'\n                        disableElevation\n                        className={classes.actionButton}\n                    >\n                        Save\n                    </Button>\n                </div>\n            </form>\n        )\n    }\n}\n\nEventForm.propTypes = {\n    data: PropTypes.object,\n    onSubmit: PropTypes.func.isRequired,\n}\n\nexport default withStyles(styles, { withTheme: true })(EventForm);\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { connect } from 'react-redux';\nimport { handleAddEvent } from '../actions/events';\nimport EventForm from './EventForm';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: theme.spacing(8),\n    },\n}))\n\n\nconst NewEvent = (props) => {\n    const classes = useStyles()\n\n    const addEvent = (data) => {\n        props.addEvent(data)\n        props.history.push('/events')\n    }\n\n    return (\n        <div className={classes.root}>\n            <Typography variant='h2'>New Event</Typography>\n            <EventForm onSubmit={addEvent}/>\n        </div>\n    )\n}\n\nconst mapStateToProps = () => ({})\n\nconst mapDispatchToProps = (dispatch) => ({\n    addEvent: data => dispatch(handleAddEvent(data)),\n})\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(NewEvent))\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { connect } from 'react-redux';\nimport { handleUpdateEvent, handleDeleteEvent } from '../actions/events';\nimport EventForm from './EventForm';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: theme.spacing(8),\n    },\n}))\n\n\nconst EventDetail = (props) => {\n    const classes = useStyles()\n\n    const updateEvent = (data) => {\n        props.updateEvent(data)\n        props.history.push('/events')\n    }\n\n    const deleteEvent = (data) => {\n        props.deleteEvent(data)\n        props.history.push('/events')\n    }\n\n    return (\n        <div className={classes.root}>\n            <Typography variant='h2'>Update Event</Typography>\n            <EventForm \n                data={props.data}\n                onSubmit={updateEvent} \n                onDelete={deleteEvent}\n            />\n        </div>\n    )\n}\n\nconst mapStateToProps = ({ events }, { match }) => {\n    const id = match.params.id\n    return {\n        data: events[id]\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    updateEvent: data => dispatch(handleUpdateEvent(data)),\n    deleteEvent: data => dispatch(handleDeleteEvent(data)),\n})\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EventDetail))\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { handleGetInitialData } from '../actions/shared';\nimport Nav from './Nav';\nimport EventList from './EventList';\nimport NewEvent from './NewEvent';\nimport EventDetail from './EventDetail';\n\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.dispatch(handleGetInitialData())\n    }\n\n    render() {\n        return (\n            <BrowserRouter>\n                <Nav/>\n                <Switch>\n                    <Route exact path='/events' component={EventList}/>\n                    <Route exact path='/events/new' component={NewEvent}/>\n                    <Route exact path='/events/:id' component={EventDetail}/>\n                    <Route component={EventList}/>\n                </Switch>\n            </BrowserRouter>\n        )\n    }\n\n}\nexport default connect()(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport store from './store';\nimport App from './components/App';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}